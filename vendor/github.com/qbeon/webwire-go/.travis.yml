language: go

go:
  - master
  - "1.11"

install: true

matrix:
  allow_failures:
    - go: master
  fast_finish: true

notifications:
  email: true

before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get golang.org/x/lint/golint                             # Linter
  - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/mattn/goveralls
  - go get github.com/go-playground/overalls

script:
  # Run all the tests with the race detector enabled
  - overalls -project=github.com/qbeon/webwire-go -covermode=atomic -debug -- -race -v -coverpkg=./...
  - $HOME/gopath/bin/goveralls -coverprofile=overalls.coverprofile -service=travis-ci -repotoken=$COVERALLS_TOKEN

  # go vet is the official Go static analyzer
  - go vet ./...

  # "go vet on steroids" + linter
  - megacheck ./...

  # one last linter
  - golint -set_exit_status $(go list ./...)

after_success:
  - "curl -s -X POST
    -H \"Content-Type: application/json\"
    -H \"Accept: application/json\"
    -H \"Travis-API-Version: 3\"
    -H \"Authorization: token $TRAVIS_API_TOKEN\"
    -d '{\"request\": {\"branch\":\"master\"}}'
    https://api.travis-ci.org/repo/qbeon%2Fwebwire-go-gorilla/requests"
  - "curl -s -X POST
    -H \"Content-Type: application/json\"
    -H \"Accept: application/json\"
    -H \"Travis-API-Version: 3\"
    -H \"Authorization: token $TRAVIS_API_TOKEN\"
    -d '{\"request\": {\"branch\":\"master\"}}'
    https://api.travis-ci.org/repo/qbeon%2Fwebwire-go-fasthttp/requests"
  - "curl -s -X POST
    -H \"Content-Type: application/json\"
    -H \"Accept: application/json\"
    -H \"Travis-API-Version: 3\"
    -H \"Authorization: token $TRAVIS_API_TOKEN\"
    -d '{\"request\": {\"branch\":\"master\"}}'
    https://api.travis-ci.org/repo/qbeon%2Fwebwire-go-examples/requests"
